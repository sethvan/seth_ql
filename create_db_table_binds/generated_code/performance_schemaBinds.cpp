// This file was generated by createDBTableBinds() function
#include "performance_schemaBinds.h"

using namespace seth_ql;
using enum seth_ql::Field;

BindsArray<InputCType> accountsInputBindsArray() {
   return makeInputBindsArray( Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ),
                               Bind<BIGINT>( "CURRENT_CONNECTIONS" ),
                               Bind<BIGINT>( "TOTAL_CONNECTIONS" ) );
}
BindsArray<OutputCType> accountsOutputBindsArray() {
   return makeOutputBindsArray( Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ),
                                Bind<BIGINT>( "CURRENT_CONNECTIONS" ),
                                Bind<BIGINT>( "TOTAL_CONNECTIONS" ) );
}

BindsArray<InputCType> cond_instancesInputBindsArray() {
   return makeInputBindsArray( Bind<VARCHAR>( "NAME", 100 ),
                               Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ) );
}
BindsArray<OutputCType> cond_instancesOutputBindsArray() {
   return makeOutputBindsArray( Bind<VARCHAR>( "NAME", 100 ),
                                Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ) );
}

BindsArray<InputCType> events_stages_currentInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "WORK_COMPLETED" ), Bind<BIGINT_UNSIGNED>( "WORK_ESTIMATED" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ) );
}
BindsArray<OutputCType> events_stages_currentOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "WORK_COMPLETED" ), Bind<BIGINT_UNSIGNED>( "WORK_ESTIMATED" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ) );
}

BindsArray<InputCType> events_stages_historyInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "WORK_COMPLETED" ), Bind<BIGINT_UNSIGNED>( "WORK_ESTIMATED" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ) );
}
BindsArray<OutputCType> events_stages_historyOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "WORK_COMPLETED" ), Bind<BIGINT_UNSIGNED>( "WORK_ESTIMATED" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ) );
}

BindsArray<InputCType> events_stages_history_longInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "WORK_COMPLETED" ), Bind<BIGINT_UNSIGNED>( "WORK_ESTIMATED" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ) );
}
BindsArray<OutputCType> events_stages_history_longOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "WORK_COMPLETED" ), Bind<BIGINT_UNSIGNED>( "WORK_ESTIMATED" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ) );
}

BindsArray<InputCType> events_stages_summary_by_account_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}
BindsArray<OutputCType> events_stages_summary_by_account_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}

BindsArray<InputCType> events_stages_summary_by_host_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}
BindsArray<OutputCType> events_stages_summary_by_host_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}

BindsArray<InputCType> events_stages_summary_by_thread_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}
BindsArray<OutputCType> events_stages_summary_by_thread_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}

BindsArray<InputCType> events_stages_summary_by_user_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}
BindsArray<OutputCType> events_stages_summary_by_user_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}

BindsArray<InputCType> events_stages_summary_global_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}
BindsArray<OutputCType> events_stages_summary_global_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}

BindsArray<InputCType> events_statements_currentInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "LOCK_TIME" ), Bind<LONGTEXT>( "SQL_TEXT", 100 ),
       Bind<VARCHAR>( "DIGEST", 100 ), Bind<LONGTEXT>( "DIGEST_TEXT", 100 ),
       Bind<VARCHAR>( "CURRENT_SCHEMA", 100 ), Bind<VARCHAR>( "OBJECT_TYPE", 100 ),
       Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ), Bind<VARCHAR>( "OBJECT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ), Bind<INT>( "MYSQL_ERRNO" ),
       Bind<VARCHAR>( "RETURNED_SQLSTATE", 100 ), Bind<VARCHAR>( "MESSAGE_TEXT", 100 ),
       Bind<BIGINT_UNSIGNED>( "ERRORS" ), Bind<BIGINT_UNSIGNED>( "WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "ROWS_EXAMINED" ), Bind<BIGINT_UNSIGNED>( "CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "CREATED_TMP_TABLES" ), Bind<BIGINT_UNSIGNED>( "SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SELECT_FULL_RANGE_JOIN" ), Bind<BIGINT_UNSIGNED>( "SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SELECT_RANGE_CHECK" ), Bind<BIGINT_UNSIGNED>( "SELECT_SCAN" ),
       Bind<BIGINT_UNSIGNED>( "SORT_MERGE_PASSES" ), Bind<BIGINT_UNSIGNED>( "SORT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SORT_ROWS" ), Bind<BIGINT_UNSIGNED>( "SORT_SCAN" ),
       Bind<BIGINT_UNSIGNED>( "NO_INDEX_USED" ), Bind<BIGINT_UNSIGNED>( "NO_GOOD_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ),
       Bind<INT>( "NESTING_EVENT_LEVEL" ) );
}
BindsArray<OutputCType> events_statements_currentOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "LOCK_TIME" ), Bind<LONGTEXT>( "SQL_TEXT", 100 ),
       Bind<VARCHAR>( "DIGEST", 100 ), Bind<LONGTEXT>( "DIGEST_TEXT", 100 ),
       Bind<VARCHAR>( "CURRENT_SCHEMA", 100 ), Bind<VARCHAR>( "OBJECT_TYPE", 100 ),
       Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ), Bind<VARCHAR>( "OBJECT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ), Bind<INT>( "MYSQL_ERRNO" ),
       Bind<VARCHAR>( "RETURNED_SQLSTATE", 100 ), Bind<VARCHAR>( "MESSAGE_TEXT", 100 ),
       Bind<BIGINT_UNSIGNED>( "ERRORS" ), Bind<BIGINT_UNSIGNED>( "WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "ROWS_EXAMINED" ), Bind<BIGINT_UNSIGNED>( "CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "CREATED_TMP_TABLES" ), Bind<BIGINT_UNSIGNED>( "SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SELECT_FULL_RANGE_JOIN" ), Bind<BIGINT_UNSIGNED>( "SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SELECT_RANGE_CHECK" ), Bind<BIGINT_UNSIGNED>( "SELECT_SCAN" ),
       Bind<BIGINT_UNSIGNED>( "SORT_MERGE_PASSES" ), Bind<BIGINT_UNSIGNED>( "SORT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SORT_ROWS" ), Bind<BIGINT_UNSIGNED>( "SORT_SCAN" ),
       Bind<BIGINT_UNSIGNED>( "NO_INDEX_USED" ), Bind<BIGINT_UNSIGNED>( "NO_GOOD_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ),
       Bind<INT>( "NESTING_EVENT_LEVEL" ) );
}

BindsArray<InputCType> events_statements_historyInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "LOCK_TIME" ), Bind<LONGTEXT>( "SQL_TEXT", 100 ),
       Bind<VARCHAR>( "DIGEST", 100 ), Bind<LONGTEXT>( "DIGEST_TEXT", 100 ),
       Bind<VARCHAR>( "CURRENT_SCHEMA", 100 ), Bind<VARCHAR>( "OBJECT_TYPE", 100 ),
       Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ), Bind<VARCHAR>( "OBJECT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ), Bind<INT>( "MYSQL_ERRNO" ),
       Bind<VARCHAR>( "RETURNED_SQLSTATE", 100 ), Bind<VARCHAR>( "MESSAGE_TEXT", 100 ),
       Bind<BIGINT_UNSIGNED>( "ERRORS" ), Bind<BIGINT_UNSIGNED>( "WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "ROWS_EXAMINED" ), Bind<BIGINT_UNSIGNED>( "CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "CREATED_TMP_TABLES" ), Bind<BIGINT_UNSIGNED>( "SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SELECT_FULL_RANGE_JOIN" ), Bind<BIGINT_UNSIGNED>( "SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SELECT_RANGE_CHECK" ), Bind<BIGINT_UNSIGNED>( "SELECT_SCAN" ),
       Bind<BIGINT_UNSIGNED>( "SORT_MERGE_PASSES" ), Bind<BIGINT_UNSIGNED>( "SORT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SORT_ROWS" ), Bind<BIGINT_UNSIGNED>( "SORT_SCAN" ),
       Bind<BIGINT_UNSIGNED>( "NO_INDEX_USED" ), Bind<BIGINT_UNSIGNED>( "NO_GOOD_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ),
       Bind<INT>( "NESTING_EVENT_LEVEL" ) );
}
BindsArray<OutputCType> events_statements_historyOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "LOCK_TIME" ), Bind<LONGTEXT>( "SQL_TEXT", 100 ),
       Bind<VARCHAR>( "DIGEST", 100 ), Bind<LONGTEXT>( "DIGEST_TEXT", 100 ),
       Bind<VARCHAR>( "CURRENT_SCHEMA", 100 ), Bind<VARCHAR>( "OBJECT_TYPE", 100 ),
       Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ), Bind<VARCHAR>( "OBJECT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ), Bind<INT>( "MYSQL_ERRNO" ),
       Bind<VARCHAR>( "RETURNED_SQLSTATE", 100 ), Bind<VARCHAR>( "MESSAGE_TEXT", 100 ),
       Bind<BIGINT_UNSIGNED>( "ERRORS" ), Bind<BIGINT_UNSIGNED>( "WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "ROWS_EXAMINED" ), Bind<BIGINT_UNSIGNED>( "CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "CREATED_TMP_TABLES" ), Bind<BIGINT_UNSIGNED>( "SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SELECT_FULL_RANGE_JOIN" ), Bind<BIGINT_UNSIGNED>( "SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SELECT_RANGE_CHECK" ), Bind<BIGINT_UNSIGNED>( "SELECT_SCAN" ),
       Bind<BIGINT_UNSIGNED>( "SORT_MERGE_PASSES" ), Bind<BIGINT_UNSIGNED>( "SORT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SORT_ROWS" ), Bind<BIGINT_UNSIGNED>( "SORT_SCAN" ),
       Bind<BIGINT_UNSIGNED>( "NO_INDEX_USED" ), Bind<BIGINT_UNSIGNED>( "NO_GOOD_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ),
       Bind<INT>( "NESTING_EVENT_LEVEL" ) );
}

BindsArray<InputCType> events_statements_history_longInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "LOCK_TIME" ), Bind<LONGTEXT>( "SQL_TEXT", 100 ),
       Bind<VARCHAR>( "DIGEST", 100 ), Bind<LONGTEXT>( "DIGEST_TEXT", 100 ),
       Bind<VARCHAR>( "CURRENT_SCHEMA", 100 ), Bind<VARCHAR>( "OBJECT_TYPE", 100 ),
       Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ), Bind<VARCHAR>( "OBJECT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ), Bind<INT>( "MYSQL_ERRNO" ),
       Bind<VARCHAR>( "RETURNED_SQLSTATE", 100 ), Bind<VARCHAR>( "MESSAGE_TEXT", 100 ),
       Bind<BIGINT_UNSIGNED>( "ERRORS" ), Bind<BIGINT_UNSIGNED>( "WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "ROWS_EXAMINED" ), Bind<BIGINT_UNSIGNED>( "CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "CREATED_TMP_TABLES" ), Bind<BIGINT_UNSIGNED>( "SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SELECT_FULL_RANGE_JOIN" ), Bind<BIGINT_UNSIGNED>( "SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SELECT_RANGE_CHECK" ), Bind<BIGINT_UNSIGNED>( "SELECT_SCAN" ),
       Bind<BIGINT_UNSIGNED>( "SORT_MERGE_PASSES" ), Bind<BIGINT_UNSIGNED>( "SORT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SORT_ROWS" ), Bind<BIGINT_UNSIGNED>( "SORT_SCAN" ),
       Bind<BIGINT_UNSIGNED>( "NO_INDEX_USED" ), Bind<BIGINT_UNSIGNED>( "NO_GOOD_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ),
       Bind<INT>( "NESTING_EVENT_LEVEL" ) );
}
BindsArray<OutputCType> events_statements_history_longOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "LOCK_TIME" ), Bind<LONGTEXT>( "SQL_TEXT", 100 ),
       Bind<VARCHAR>( "DIGEST", 100 ), Bind<LONGTEXT>( "DIGEST_TEXT", 100 ),
       Bind<VARCHAR>( "CURRENT_SCHEMA", 100 ), Bind<VARCHAR>( "OBJECT_TYPE", 100 ),
       Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ), Bind<VARCHAR>( "OBJECT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ), Bind<INT>( "MYSQL_ERRNO" ),
       Bind<VARCHAR>( "RETURNED_SQLSTATE", 100 ), Bind<VARCHAR>( "MESSAGE_TEXT", 100 ),
       Bind<BIGINT_UNSIGNED>( "ERRORS" ), Bind<BIGINT_UNSIGNED>( "WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "ROWS_EXAMINED" ), Bind<BIGINT_UNSIGNED>( "CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "CREATED_TMP_TABLES" ), Bind<BIGINT_UNSIGNED>( "SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SELECT_FULL_RANGE_JOIN" ), Bind<BIGINT_UNSIGNED>( "SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SELECT_RANGE_CHECK" ), Bind<BIGINT_UNSIGNED>( "SELECT_SCAN" ),
       Bind<BIGINT_UNSIGNED>( "SORT_MERGE_PASSES" ), Bind<BIGINT_UNSIGNED>( "SORT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SORT_ROWS" ), Bind<BIGINT_UNSIGNED>( "SORT_SCAN" ),
       Bind<BIGINT_UNSIGNED>( "NO_INDEX_USED" ), Bind<BIGINT_UNSIGNED>( "NO_GOOD_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ),
       Bind<INT>( "NESTING_EVENT_LEVEL" ) );
}

BindsArray<InputCType> events_statements_summary_by_account_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ), Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}
BindsArray<OutputCType> events_statements_summary_by_account_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ), Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}

BindsArray<InputCType> events_statements_summary_by_digestInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "SCHEMA_NAME", 100 ), Bind<VARCHAR>( "DIGEST", 100 ),
       Bind<LONGTEXT>( "DIGEST_TEXT", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ), Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ), Bind<TIMESTAMP>( "FIRST_SEEN" ),
       Bind<TIMESTAMP>( "LAST_SEEN" ) );
}
BindsArray<OutputCType> events_statements_summary_by_digestOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "SCHEMA_NAME", 100 ), Bind<VARCHAR>( "DIGEST", 100 ),
       Bind<LONGTEXT>( "DIGEST_TEXT", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ), Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ), Bind<TIMESTAMP>( "FIRST_SEEN" ),
       Bind<TIMESTAMP>( "LAST_SEEN" ) );
}

BindsArray<InputCType> events_statements_summary_by_host_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ), Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}
BindsArray<OutputCType> events_statements_summary_by_host_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ), Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}

BindsArray<InputCType> events_statements_summary_by_programInputBindsArray() {
   return makeInputBindsArray(
       Bind<ENUM>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STATEMENTS" ), Bind<BIGINT_UNSIGNED>( "SUM_STATEMENTS_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_STATEMENTS_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_STATEMENTS_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_STATEMENTS_WAIT" ), Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ), Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}
BindsArray<OutputCType> events_statements_summary_by_programOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<ENUM>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STATEMENTS" ), Bind<BIGINT_UNSIGNED>( "SUM_STATEMENTS_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_STATEMENTS_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_STATEMENTS_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_STATEMENTS_WAIT" ), Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ), Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}

BindsArray<InputCType> events_statements_summary_by_thread_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ), Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}
BindsArray<OutputCType> events_statements_summary_by_thread_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ), Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}

BindsArray<InputCType> events_statements_summary_by_user_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ), Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}
BindsArray<OutputCType> events_statements_summary_by_user_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ), Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}

BindsArray<InputCType> events_statements_summary_global_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ), Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}
BindsArray<OutputCType> events_statements_summary_global_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ), Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}

BindsArray<InputCType> events_transactions_currentInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<ENUM>( "STATE", 100 ), Bind<BIGINT_UNSIGNED>( "TRX_ID" ), Bind<VARCHAR>( "GTID", 100 ),
       Bind<INT>( "XID_FORMAT_ID" ), Bind<VARCHAR>( "XID_GTRID", 100 ),
       Bind<VARCHAR>( "XID_BQUAL", 100 ), Bind<VARCHAR>( "XA_STATE", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<ENUM>( "ACCESS_MODE", 100 ), Bind<VARCHAR>( "ISOLATION_LEVEL", 100 ),
       Bind<ENUM>( "AUTOCOMMIT", 100 ), Bind<BIGINT_UNSIGNED>( "NUMBER_OF_SAVEPOINTS" ),
       Bind<BIGINT_UNSIGNED>( "NUMBER_OF_ROLLBACK_TO_SAVEPOINT" ),
       Bind<BIGINT_UNSIGNED>( "NUMBER_OF_RELEASE_SAVEPOINT" ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ) );
}
BindsArray<OutputCType> events_transactions_currentOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<ENUM>( "STATE", 100 ), Bind<BIGINT_UNSIGNED>( "TRX_ID" ), Bind<VARCHAR>( "GTID", 100 ),
       Bind<INT>( "XID_FORMAT_ID" ), Bind<VARCHAR>( "XID_GTRID", 100 ),
       Bind<VARCHAR>( "XID_BQUAL", 100 ), Bind<VARCHAR>( "XA_STATE", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<ENUM>( "ACCESS_MODE", 100 ), Bind<VARCHAR>( "ISOLATION_LEVEL", 100 ),
       Bind<ENUM>( "AUTOCOMMIT", 100 ), Bind<BIGINT_UNSIGNED>( "NUMBER_OF_SAVEPOINTS" ),
       Bind<BIGINT_UNSIGNED>( "NUMBER_OF_ROLLBACK_TO_SAVEPOINT" ),
       Bind<BIGINT_UNSIGNED>( "NUMBER_OF_RELEASE_SAVEPOINT" ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ) );
}

BindsArray<InputCType> events_transactions_historyInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<ENUM>( "STATE", 100 ), Bind<BIGINT_UNSIGNED>( "TRX_ID" ), Bind<VARCHAR>( "GTID", 100 ),
       Bind<INT>( "XID_FORMAT_ID" ), Bind<VARCHAR>( "XID_GTRID", 100 ),
       Bind<VARCHAR>( "XID_BQUAL", 100 ), Bind<VARCHAR>( "XA_STATE", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<ENUM>( "ACCESS_MODE", 100 ), Bind<VARCHAR>( "ISOLATION_LEVEL", 100 ),
       Bind<ENUM>( "AUTOCOMMIT", 100 ), Bind<BIGINT_UNSIGNED>( "NUMBER_OF_SAVEPOINTS" ),
       Bind<BIGINT_UNSIGNED>( "NUMBER_OF_ROLLBACK_TO_SAVEPOINT" ),
       Bind<BIGINT_UNSIGNED>( "NUMBER_OF_RELEASE_SAVEPOINT" ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ) );
}
BindsArray<OutputCType> events_transactions_historyOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<ENUM>( "STATE", 100 ), Bind<BIGINT_UNSIGNED>( "TRX_ID" ), Bind<VARCHAR>( "GTID", 100 ),
       Bind<INT>( "XID_FORMAT_ID" ), Bind<VARCHAR>( "XID_GTRID", 100 ),
       Bind<VARCHAR>( "XID_BQUAL", 100 ), Bind<VARCHAR>( "XA_STATE", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<ENUM>( "ACCESS_MODE", 100 ), Bind<VARCHAR>( "ISOLATION_LEVEL", 100 ),
       Bind<ENUM>( "AUTOCOMMIT", 100 ), Bind<BIGINT_UNSIGNED>( "NUMBER_OF_SAVEPOINTS" ),
       Bind<BIGINT_UNSIGNED>( "NUMBER_OF_ROLLBACK_TO_SAVEPOINT" ),
       Bind<BIGINT_UNSIGNED>( "NUMBER_OF_RELEASE_SAVEPOINT" ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ) );
}

BindsArray<InputCType> events_transactions_history_longInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<ENUM>( "STATE", 100 ), Bind<BIGINT_UNSIGNED>( "TRX_ID" ), Bind<VARCHAR>( "GTID", 100 ),
       Bind<INT>( "XID_FORMAT_ID" ), Bind<VARCHAR>( "XID_GTRID", 100 ),
       Bind<VARCHAR>( "XID_BQUAL", 100 ), Bind<VARCHAR>( "XA_STATE", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<ENUM>( "ACCESS_MODE", 100 ), Bind<VARCHAR>( "ISOLATION_LEVEL", 100 ),
       Bind<ENUM>( "AUTOCOMMIT", 100 ), Bind<BIGINT_UNSIGNED>( "NUMBER_OF_SAVEPOINTS" ),
       Bind<BIGINT_UNSIGNED>( "NUMBER_OF_ROLLBACK_TO_SAVEPOINT" ),
       Bind<BIGINT_UNSIGNED>( "NUMBER_OF_RELEASE_SAVEPOINT" ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ) );
}
BindsArray<OutputCType> events_transactions_history_longOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<ENUM>( "STATE", 100 ), Bind<BIGINT_UNSIGNED>( "TRX_ID" ), Bind<VARCHAR>( "GTID", 100 ),
       Bind<INT>( "XID_FORMAT_ID" ), Bind<VARCHAR>( "XID_GTRID", 100 ),
       Bind<VARCHAR>( "XID_BQUAL", 100 ), Bind<VARCHAR>( "XA_STATE", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<ENUM>( "ACCESS_MODE", 100 ), Bind<VARCHAR>( "ISOLATION_LEVEL", 100 ),
       Bind<ENUM>( "AUTOCOMMIT", 100 ), Bind<BIGINT_UNSIGNED>( "NUMBER_OF_SAVEPOINTS" ),
       Bind<BIGINT_UNSIGNED>( "NUMBER_OF_ROLLBACK_TO_SAVEPOINT" ),
       Bind<BIGINT_UNSIGNED>( "NUMBER_OF_RELEASE_SAVEPOINT" ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ) );
}

BindsArray<InputCType> events_transactions_summary_by_account_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_ONLY" ) );
}
BindsArray<OutputCType> events_transactions_summary_by_account_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_ONLY" ) );
}

BindsArray<InputCType> events_transactions_summary_by_host_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_ONLY" ) );
}
BindsArray<OutputCType> events_transactions_summary_by_host_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_ONLY" ) );
}

BindsArray<InputCType> events_transactions_summary_by_thread_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_ONLY" ) );
}
BindsArray<OutputCType> events_transactions_summary_by_thread_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_ONLY" ) );
}

BindsArray<InputCType> events_transactions_summary_by_user_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_ONLY" ) );
}
BindsArray<OutputCType> events_transactions_summary_by_user_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_ONLY" ) );
}

BindsArray<InputCType> events_transactions_summary_global_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ_WRITE" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_ONLY" ) );
}
BindsArray<OutputCType> events_transactions_summary_global_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ_WRITE" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_ONLY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_ONLY" ) );
}

BindsArray<InputCType> events_waits_currentInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<INT_UNSIGNED>( "SPINS" ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<VARCHAR>( "INDEX_NAME", 100 ),
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ),
       Bind<VARCHAR>( "OPERATION", 100 ), Bind<BIGINT>( "NUMBER_OF_BYTES" ),
       Bind<INT_UNSIGNED>( "FLAGS" ) );
}
BindsArray<OutputCType> events_waits_currentOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<INT_UNSIGNED>( "SPINS" ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<VARCHAR>( "INDEX_NAME", 100 ),
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ),
       Bind<VARCHAR>( "OPERATION", 100 ), Bind<BIGINT>( "NUMBER_OF_BYTES" ),
       Bind<INT_UNSIGNED>( "FLAGS" ) );
}

BindsArray<InputCType> events_waits_historyInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<INT_UNSIGNED>( "SPINS" ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<VARCHAR>( "INDEX_NAME", 100 ),
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ),
       Bind<VARCHAR>( "OPERATION", 100 ), Bind<BIGINT>( "NUMBER_OF_BYTES" ),
       Bind<INT_UNSIGNED>( "FLAGS" ) );
}
BindsArray<OutputCType> events_waits_historyOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<INT_UNSIGNED>( "SPINS" ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<VARCHAR>( "INDEX_NAME", 100 ),
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ),
       Bind<VARCHAR>( "OPERATION", 100 ), Bind<BIGINT>( "NUMBER_OF_BYTES" ),
       Bind<INT_UNSIGNED>( "FLAGS" ) );
}

BindsArray<InputCType> events_waits_history_longInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<INT_UNSIGNED>( "SPINS" ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<VARCHAR>( "INDEX_NAME", 100 ),
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ),
       Bind<VARCHAR>( "OPERATION", 100 ), Bind<BIGINT>( "NUMBER_OF_BYTES" ),
       Bind<INT_UNSIGNED>( "FLAGS" ) );
}
BindsArray<OutputCType> events_waits_history_longOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "EVENT_ID" ),
       Bind<BIGINT_UNSIGNED>( "END_EVENT_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<VARCHAR>( "SOURCE", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_START" ),
       Bind<BIGINT_UNSIGNED>( "TIMER_END" ), Bind<BIGINT_UNSIGNED>( "TIMER_WAIT" ),
       Bind<INT_UNSIGNED>( "SPINS" ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<VARCHAR>( "INDEX_NAME", 100 ),
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "NESTING_EVENT_ID" ), Bind<ENUM>( "NESTING_EVENT_TYPE", 100 ),
       Bind<VARCHAR>( "OPERATION", 100 ), Bind<BIGINT>( "NUMBER_OF_BYTES" ),
       Bind<INT_UNSIGNED>( "FLAGS" ) );
}

BindsArray<InputCType> events_waits_summary_by_account_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}
BindsArray<OutputCType> events_waits_summary_by_account_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}

BindsArray<InputCType> events_waits_summary_by_host_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}
BindsArray<OutputCType> events_waits_summary_by_host_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}

BindsArray<InputCType> events_waits_summary_by_instanceInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}
BindsArray<OutputCType> events_waits_summary_by_instanceOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}

BindsArray<InputCType> events_waits_summary_by_thread_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}
BindsArray<OutputCType> events_waits_summary_by_thread_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}

BindsArray<InputCType> events_waits_summary_by_user_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}
BindsArray<OutputCType> events_waits_summary_by_user_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}

BindsArray<InputCType> events_waits_summary_global_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}
BindsArray<OutputCType> events_waits_summary_global_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}

BindsArray<InputCType> file_instancesInputBindsArray() {
   return makeInputBindsArray( Bind<VARCHAR>( "FILE_NAME", 100 ),
                               Bind<VARCHAR>( "EVENT_NAME", 100 ),
                               Bind<INT_UNSIGNED>( "OPEN_COUNT" ) );
}
BindsArray<OutputCType> file_instancesOutputBindsArray() {
   return makeOutputBindsArray( Bind<VARCHAR>( "FILE_NAME", 100 ),
                                Bind<VARCHAR>( "EVENT_NAME", 100 ),
                                Bind<INT_UNSIGNED>( "OPEN_COUNT" ) );
}

BindsArray<InputCType> file_summary_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ), Bind<BIGINT>( "SUM_NUMBER_OF_BYTES_READ" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ), Bind<BIGINT>( "SUM_NUMBER_OF_BYTES_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_MISC" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_MISC" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_MISC" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_MISC" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_MISC" ) );
}
BindsArray<OutputCType> file_summary_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ), Bind<BIGINT>( "SUM_NUMBER_OF_BYTES_READ" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ), Bind<BIGINT>( "SUM_NUMBER_OF_BYTES_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_MISC" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_MISC" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_MISC" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_MISC" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_MISC" ) );
}

BindsArray<InputCType> file_summary_by_instanceInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "FILE_NAME", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ), Bind<BIGINT>( "SUM_NUMBER_OF_BYTES_READ" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ), Bind<BIGINT>( "SUM_NUMBER_OF_BYTES_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_MISC" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_MISC" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_MISC" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_MISC" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_MISC" ) );
}
BindsArray<OutputCType> file_summary_by_instanceOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "FILE_NAME", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ), Bind<BIGINT>( "SUM_NUMBER_OF_BYTES_READ" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ), Bind<BIGINT>( "SUM_NUMBER_OF_BYTES_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_MISC" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_MISC" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_MISC" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_MISC" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_MISC" ) );
}

BindsArray<InputCType> global_statusInputBindsArray() {
   return makeInputBindsArray( Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                               Bind<VARCHAR>( "VARIABLE_VALUE", 100 ) );
}
BindsArray<OutputCType> global_statusOutputBindsArray() {
   return makeOutputBindsArray( Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                                Bind<VARCHAR>( "VARIABLE_VALUE", 100 ) );
}

BindsArray<InputCType> host_cacheInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "IP", 100 ), Bind<VARCHAR>( "HOST", 100 ),
       Bind<ENUM>( "HOST_VALIDATED", 100 ), Bind<BIGINT>( "SUM_CONNECT_ERRORS" ),
       Bind<BIGINT>( "COUNT_HOST_BLOCKED_ERRORS" ),
       Bind<BIGINT>( "COUNT_NAMEINFO_TRANSIENT_ERRORS" ),
       Bind<BIGINT>( "COUNT_NAMEINFO_PERMANENT_ERRORS" ), Bind<BIGINT>( "COUNT_FORMAT_ERRORS" ),
       Bind<BIGINT>( "COUNT_ADDRINFO_TRANSIENT_ERRORS" ),
       Bind<BIGINT>( "COUNT_ADDRINFO_PERMANENT_ERRORS" ), Bind<BIGINT>( "COUNT_FCRDNS_ERRORS" ),
       Bind<BIGINT>( "COUNT_HOST_ACL_ERRORS" ), Bind<BIGINT>( "COUNT_NO_AUTH_PLUGIN_ERRORS" ),
       Bind<BIGINT>( "COUNT_AUTH_PLUGIN_ERRORS" ), Bind<BIGINT>( "COUNT_HANDSHAKE_ERRORS" ),
       Bind<BIGINT>( "COUNT_PROXY_USER_ERRORS" ), Bind<BIGINT>( "COUNT_PROXY_USER_ACL_ERRORS" ),
       Bind<BIGINT>( "COUNT_AUTHENTICATION_ERRORS" ), Bind<BIGINT>( "COUNT_SSL_ERRORS" ),
       Bind<BIGINT>( "COUNT_MAX_USER_CONNECTIONS_ERRORS" ),
       Bind<BIGINT>( "COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS" ),
       Bind<BIGINT>( "COUNT_DEFAULT_DATABASE_ERRORS" ), Bind<BIGINT>( "COUNT_INIT_CONNECT_ERRORS" ),
       Bind<BIGINT>( "COUNT_LOCAL_ERRORS" ), Bind<BIGINT>( "COUNT_UNKNOWN_ERRORS" ),
       Bind<TIMESTAMP>( "FIRST_SEEN" ), Bind<TIMESTAMP>( "LAST_SEEN" ),
       Bind<TIMESTAMP>( "FIRST_ERROR_SEEN" ), Bind<TIMESTAMP>( "LAST_ERROR_SEEN" ) );
}
BindsArray<OutputCType> host_cacheOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "IP", 100 ), Bind<VARCHAR>( "HOST", 100 ),
       Bind<ENUM>( "HOST_VALIDATED", 100 ), Bind<BIGINT>( "SUM_CONNECT_ERRORS" ),
       Bind<BIGINT>( "COUNT_HOST_BLOCKED_ERRORS" ),
       Bind<BIGINT>( "COUNT_NAMEINFO_TRANSIENT_ERRORS" ),
       Bind<BIGINT>( "COUNT_NAMEINFO_PERMANENT_ERRORS" ), Bind<BIGINT>( "COUNT_FORMAT_ERRORS" ),
       Bind<BIGINT>( "COUNT_ADDRINFO_TRANSIENT_ERRORS" ),
       Bind<BIGINT>( "COUNT_ADDRINFO_PERMANENT_ERRORS" ), Bind<BIGINT>( "COUNT_FCRDNS_ERRORS" ),
       Bind<BIGINT>( "COUNT_HOST_ACL_ERRORS" ), Bind<BIGINT>( "COUNT_NO_AUTH_PLUGIN_ERRORS" ),
       Bind<BIGINT>( "COUNT_AUTH_PLUGIN_ERRORS" ), Bind<BIGINT>( "COUNT_HANDSHAKE_ERRORS" ),
       Bind<BIGINT>( "COUNT_PROXY_USER_ERRORS" ), Bind<BIGINT>( "COUNT_PROXY_USER_ACL_ERRORS" ),
       Bind<BIGINT>( "COUNT_AUTHENTICATION_ERRORS" ), Bind<BIGINT>( "COUNT_SSL_ERRORS" ),
       Bind<BIGINT>( "COUNT_MAX_USER_CONNECTIONS_ERRORS" ),
       Bind<BIGINT>( "COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS" ),
       Bind<BIGINT>( "COUNT_DEFAULT_DATABASE_ERRORS" ), Bind<BIGINT>( "COUNT_INIT_CONNECT_ERRORS" ),
       Bind<BIGINT>( "COUNT_LOCAL_ERRORS" ), Bind<BIGINT>( "COUNT_UNKNOWN_ERRORS" ),
       Bind<TIMESTAMP>( "FIRST_SEEN" ), Bind<TIMESTAMP>( "LAST_SEEN" ),
       Bind<TIMESTAMP>( "FIRST_ERROR_SEEN" ), Bind<TIMESTAMP>( "LAST_ERROR_SEEN" ) );
}

BindsArray<InputCType> hostsInputBindsArray() {
   return makeInputBindsArray( Bind<CHAR>( "HOST", 100 ), Bind<BIGINT>( "CURRENT_CONNECTIONS" ),
                               Bind<BIGINT>( "TOTAL_CONNECTIONS" ) );
}
BindsArray<OutputCType> hostsOutputBindsArray() {
   return makeOutputBindsArray( Bind<CHAR>( "HOST", 100 ), Bind<BIGINT>( "CURRENT_CONNECTIONS" ),
                                Bind<BIGINT>( "TOTAL_CONNECTIONS" ) );
}

BindsArray<InputCType> memory_summary_by_account_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_ALLOC" ), Bind<BIGINT_UNSIGNED>( "COUNT_FREE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_ALLOC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_FREE" ), Bind<BIGINT>( "LOW_COUNT_USED" ),
       Bind<BIGINT>( "CURRENT_COUNT_USED" ), Bind<BIGINT>( "HIGH_COUNT_USED" ),
       Bind<BIGINT>( "LOW_NUMBER_OF_BYTES_USED" ), Bind<BIGINT>( "CURRENT_NUMBER_OF_BYTES_USED" ),
       Bind<BIGINT>( "HIGH_NUMBER_OF_BYTES_USED" ) );
}
BindsArray<OutputCType> memory_summary_by_account_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_ALLOC" ), Bind<BIGINT_UNSIGNED>( "COUNT_FREE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_ALLOC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_FREE" ), Bind<BIGINT>( "LOW_COUNT_USED" ),
       Bind<BIGINT>( "CURRENT_COUNT_USED" ), Bind<BIGINT>( "HIGH_COUNT_USED" ),
       Bind<BIGINT>( "LOW_NUMBER_OF_BYTES_USED" ), Bind<BIGINT>( "CURRENT_NUMBER_OF_BYTES_USED" ),
       Bind<BIGINT>( "HIGH_NUMBER_OF_BYTES_USED" ) );
}

BindsArray<InputCType> memory_summary_by_host_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_ALLOC" ), Bind<BIGINT_UNSIGNED>( "COUNT_FREE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_ALLOC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_FREE" ), Bind<BIGINT>( "LOW_COUNT_USED" ),
       Bind<BIGINT>( "CURRENT_COUNT_USED" ), Bind<BIGINT>( "HIGH_COUNT_USED" ),
       Bind<BIGINT>( "LOW_NUMBER_OF_BYTES_USED" ), Bind<BIGINT>( "CURRENT_NUMBER_OF_BYTES_USED" ),
       Bind<BIGINT>( "HIGH_NUMBER_OF_BYTES_USED" ) );
}
BindsArray<OutputCType> memory_summary_by_host_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_ALLOC" ), Bind<BIGINT_UNSIGNED>( "COUNT_FREE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_ALLOC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_FREE" ), Bind<BIGINT>( "LOW_COUNT_USED" ),
       Bind<BIGINT>( "CURRENT_COUNT_USED" ), Bind<BIGINT>( "HIGH_COUNT_USED" ),
       Bind<BIGINT>( "LOW_NUMBER_OF_BYTES_USED" ), Bind<BIGINT>( "CURRENT_NUMBER_OF_BYTES_USED" ),
       Bind<BIGINT>( "HIGH_NUMBER_OF_BYTES_USED" ) );
}

BindsArray<InputCType> memory_summary_by_thread_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_ALLOC" ), Bind<BIGINT_UNSIGNED>( "COUNT_FREE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_ALLOC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_FREE" ), Bind<BIGINT>( "LOW_COUNT_USED" ),
       Bind<BIGINT>( "CURRENT_COUNT_USED" ), Bind<BIGINT>( "HIGH_COUNT_USED" ),
       Bind<BIGINT>( "LOW_NUMBER_OF_BYTES_USED" ), Bind<BIGINT>( "CURRENT_NUMBER_OF_BYTES_USED" ),
       Bind<BIGINT>( "HIGH_NUMBER_OF_BYTES_USED" ) );
}
BindsArray<OutputCType> memory_summary_by_thread_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_ALLOC" ), Bind<BIGINT_UNSIGNED>( "COUNT_FREE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_ALLOC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_FREE" ), Bind<BIGINT>( "LOW_COUNT_USED" ),
       Bind<BIGINT>( "CURRENT_COUNT_USED" ), Bind<BIGINT>( "HIGH_COUNT_USED" ),
       Bind<BIGINT>( "LOW_NUMBER_OF_BYTES_USED" ), Bind<BIGINT>( "CURRENT_NUMBER_OF_BYTES_USED" ),
       Bind<BIGINT>( "HIGH_NUMBER_OF_BYTES_USED" ) );
}

BindsArray<InputCType> memory_summary_by_user_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_ALLOC" ), Bind<BIGINT_UNSIGNED>( "COUNT_FREE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_ALLOC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_FREE" ), Bind<BIGINT>( "LOW_COUNT_USED" ),
       Bind<BIGINT>( "CURRENT_COUNT_USED" ), Bind<BIGINT>( "HIGH_COUNT_USED" ),
       Bind<BIGINT>( "LOW_NUMBER_OF_BYTES_USED" ), Bind<BIGINT>( "CURRENT_NUMBER_OF_BYTES_USED" ),
       Bind<BIGINT>( "HIGH_NUMBER_OF_BYTES_USED" ) );
}
BindsArray<OutputCType> memory_summary_by_user_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "USER", 100 ), Bind<VARCHAR>( "EVENT_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_ALLOC" ), Bind<BIGINT_UNSIGNED>( "COUNT_FREE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_ALLOC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_FREE" ), Bind<BIGINT>( "LOW_COUNT_USED" ),
       Bind<BIGINT>( "CURRENT_COUNT_USED" ), Bind<BIGINT>( "HIGH_COUNT_USED" ),
       Bind<BIGINT>( "LOW_NUMBER_OF_BYTES_USED" ), Bind<BIGINT>( "CURRENT_NUMBER_OF_BYTES_USED" ),
       Bind<BIGINT>( "HIGH_NUMBER_OF_BYTES_USED" ) );
}

BindsArray<InputCType> memory_summary_global_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_ALLOC" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_FREE" ), Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_ALLOC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_FREE" ), Bind<BIGINT>( "LOW_COUNT_USED" ),
       Bind<BIGINT>( "CURRENT_COUNT_USED" ), Bind<BIGINT>( "HIGH_COUNT_USED" ),
       Bind<BIGINT>( "LOW_NUMBER_OF_BYTES_USED" ), Bind<BIGINT>( "CURRENT_NUMBER_OF_BYTES_USED" ),
       Bind<BIGINT>( "HIGH_NUMBER_OF_BYTES_USED" ) );
}
BindsArray<OutputCType> memory_summary_global_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_ALLOC" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_FREE" ), Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_ALLOC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_FREE" ), Bind<BIGINT>( "LOW_COUNT_USED" ),
       Bind<BIGINT>( "CURRENT_COUNT_USED" ), Bind<BIGINT>( "HIGH_COUNT_USED" ),
       Bind<BIGINT>( "LOW_NUMBER_OF_BYTES_USED" ), Bind<BIGINT>( "CURRENT_NUMBER_OF_BYTES_USED" ),
       Bind<BIGINT>( "HIGH_NUMBER_OF_BYTES_USED" ) );
}

BindsArray<InputCType> metadata_locksInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<VARCHAR>( "LOCK_TYPE", 100 ), Bind<VARCHAR>( "LOCK_DURATION", 100 ),
       Bind<VARCHAR>( "LOCK_STATUS", 100 ), Bind<VARCHAR>( "SOURCE", 100 ),
       Bind<BIGINT_UNSIGNED>( "OWNER_THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "OWNER_EVENT_ID" ) );
}
BindsArray<OutputCType> metadata_locksOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<VARCHAR>( "LOCK_TYPE", 100 ), Bind<VARCHAR>( "LOCK_DURATION", 100 ),
       Bind<VARCHAR>( "LOCK_STATUS", 100 ), Bind<VARCHAR>( "SOURCE", 100 ),
       Bind<BIGINT_UNSIGNED>( "OWNER_THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "OWNER_EVENT_ID" ) );
}

BindsArray<InputCType> mutex_instancesInputBindsArray() {
   return makeInputBindsArray( Bind<VARCHAR>( "NAME", 100 ),
                               Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
                               Bind<BIGINT_UNSIGNED>( "LOCKED_BY_THREAD_ID" ) );
}
BindsArray<OutputCType> mutex_instancesOutputBindsArray() {
   return makeOutputBindsArray( Bind<VARCHAR>( "NAME", 100 ),
                                Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
                                Bind<BIGINT_UNSIGNED>( "LOCKED_BY_THREAD_ID" ) );
}

BindsArray<InputCType> objects_summary_global_by_typeInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}
BindsArray<OutputCType> objects_summary_global_by_typeOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ) );
}

BindsArray<InputCType> performance_timersInputBindsArray() {
   return makeInputBindsArray( Bind<ENUM>( "TIMER_NAME", 100 ), Bind<BIGINT>( "TIMER_FREQUENCY" ),
                               Bind<BIGINT>( "TIMER_RESOLUTION" ),
                               Bind<BIGINT>( "TIMER_OVERHEAD" ) );
}
BindsArray<OutputCType> performance_timersOutputBindsArray() {
   return makeOutputBindsArray( Bind<ENUM>( "TIMER_NAME", 100 ), Bind<BIGINT>( "TIMER_FREQUENCY" ),
                                Bind<BIGINT>( "TIMER_RESOLUTION" ),
                                Bind<BIGINT>( "TIMER_OVERHEAD" ) );
}

BindsArray<InputCType> prepared_statements_instancesInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ), Bind<BIGINT_UNSIGNED>( "STATEMENT_ID" ),
       Bind<VARCHAR>( "STATEMENT_NAME", 100 ), Bind<LONGTEXT>( "SQL_TEXT", 100 ),
       Bind<BIGINT_UNSIGNED>( "OWNER_THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "OWNER_EVENT_ID" ),
       Bind<ENUM>( "OWNER_OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OWNER_OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OWNER_OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_PREPARE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_REPREPARE" ), Bind<BIGINT_UNSIGNED>( "COUNT_EXECUTE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_EXECUTE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_EXECUTE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_EXECUTE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_EXECUTE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ), Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}
BindsArray<OutputCType> prepared_statements_instancesOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ), Bind<BIGINT_UNSIGNED>( "STATEMENT_ID" ),
       Bind<VARCHAR>( "STATEMENT_NAME", 100 ), Bind<LONGTEXT>( "SQL_TEXT", 100 ),
       Bind<BIGINT_UNSIGNED>( "OWNER_THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "OWNER_EVENT_ID" ),
       Bind<ENUM>( "OWNER_OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OWNER_OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OWNER_OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "TIMER_PREPARE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_REPREPARE" ), Bind<BIGINT_UNSIGNED>( "COUNT_EXECUTE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_EXECUTE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_EXECUTE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_EXECUTE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_EXECUTE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_LOCK_TIME" ), Bind<BIGINT_UNSIGNED>( "SUM_ERRORS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_WARNINGS" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_AFFECTED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_ROWS_SENT" ), Bind<BIGINT_UNSIGNED>( "SUM_ROWS_EXAMINED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_DISK_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_CREATED_TMP_TABLES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_FULL_RANGE_JOIN" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_RANGE_CHECK" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SELECT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_MERGE_PASSES" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_RANGE" ), Bind<BIGINT_UNSIGNED>( "SUM_SORT_ROWS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_SORT_SCAN" ), Bind<BIGINT_UNSIGNED>( "SUM_NO_INDEX_USED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NO_GOOD_INDEX_USED" ) );
}

BindsArray<InputCType> replication_applier_configurationInputBindsArray() {
   return makeInputBindsArray( Bind<CHAR>( "CHANNEL_NAME", 100 ), Bind<INT>( "DESIRED_DELAY" ) );
}
BindsArray<OutputCType> replication_applier_configurationOutputBindsArray() {
   return makeOutputBindsArray( Bind<CHAR>( "CHANNEL_NAME", 100 ), Bind<INT>( "DESIRED_DELAY" ) );
}

BindsArray<InputCType> replication_applier_statusInputBindsArray() {
   return makeInputBindsArray( Bind<CHAR>( "CHANNEL_NAME", 100 ),
                               Bind<ENUM>( "SERVICE_STATE", 100 ),
                               Bind<INT_UNSIGNED>( "REMAINING_DELAY" ),
                               Bind<BIGINT_UNSIGNED>( "COUNT_TRANSACTIONS_RETRIES" ) );
}
BindsArray<OutputCType> replication_applier_statusOutputBindsArray() {
   return makeOutputBindsArray( Bind<CHAR>( "CHANNEL_NAME", 100 ),
                                Bind<ENUM>( "SERVICE_STATE", 100 ),
                                Bind<INT_UNSIGNED>( "REMAINING_DELAY" ),
                                Bind<BIGINT_UNSIGNED>( "COUNT_TRANSACTIONS_RETRIES" ) );
}

BindsArray<InputCType> replication_applier_status_by_coordinatorInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "CHANNEL_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "THREAD_ID" ),
       Bind<ENUM>( "SERVICE_STATE", 100 ), Bind<INT>( "LAST_ERROR_NUMBER" ),
       Bind<VARCHAR>( "LAST_ERROR_MESSAGE", 100 ), Bind<TIMESTAMP>( "LAST_ERROR_TIMESTAMP" ) );
}
BindsArray<OutputCType> replication_applier_status_by_coordinatorOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "CHANNEL_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "THREAD_ID" ),
       Bind<ENUM>( "SERVICE_STATE", 100 ), Bind<INT>( "LAST_ERROR_NUMBER" ),
       Bind<VARCHAR>( "LAST_ERROR_MESSAGE", 100 ), Bind<TIMESTAMP>( "LAST_ERROR_TIMESTAMP" ) );
}

BindsArray<InputCType> replication_connection_configurationInputBindsArray() {
   return makeInputBindsArray(
       Bind<CHAR>( "CHANNEL_NAME", 100 ), Bind<CHAR>( "HOST", 100 ), Bind<INT>( "PORT" ),
       Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "NETWORK_INTERFACE", 100 ),
       Bind<ENUM>( "AUTO_POSITION", 100 ), Bind<ENUM>( "SSL_ALLOWED", 100 ),
       Bind<VARCHAR>( "SSL_CA_FILE", 100 ), Bind<VARCHAR>( "SSL_CA_PATH", 100 ),
       Bind<VARCHAR>( "SSL_CERTIFICATE", 100 ), Bind<VARCHAR>( "SSL_CIPHER", 100 ),
       Bind<VARCHAR>( "SSL_KEY", 100 ), Bind<ENUM>( "SSL_VERIFY_SERVER_CERTIFICATE", 100 ),
       Bind<VARCHAR>( "SSL_CRL_FILE", 100 ), Bind<VARCHAR>( "SSL_CRL_PATH", 100 ),
       Bind<INT>( "CONNECTION_RETRY_INTERVAL" ), Bind<BIGINT_UNSIGNED>( "CONNECTION_RETRY_COUNT" ),
       Bind<DOUBLE>( "HEARTBEAT_INTERVAL" ), Bind<VARCHAR>( "TLS_VERSION", 100 ) );
}
BindsArray<OutputCType> replication_connection_configurationOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<CHAR>( "CHANNEL_NAME", 100 ), Bind<CHAR>( "HOST", 100 ), Bind<INT>( "PORT" ),
       Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "NETWORK_INTERFACE", 100 ),
       Bind<ENUM>( "AUTO_POSITION", 100 ), Bind<ENUM>( "SSL_ALLOWED", 100 ),
       Bind<VARCHAR>( "SSL_CA_FILE", 100 ), Bind<VARCHAR>( "SSL_CA_PATH", 100 ),
       Bind<VARCHAR>( "SSL_CERTIFICATE", 100 ), Bind<VARCHAR>( "SSL_CIPHER", 100 ),
       Bind<VARCHAR>( "SSL_KEY", 100 ), Bind<ENUM>( "SSL_VERIFY_SERVER_CERTIFICATE", 100 ),
       Bind<VARCHAR>( "SSL_CRL_FILE", 100 ), Bind<VARCHAR>( "SSL_CRL_PATH", 100 ),
       Bind<INT>( "CONNECTION_RETRY_INTERVAL" ), Bind<BIGINT_UNSIGNED>( "CONNECTION_RETRY_COUNT" ),
       Bind<DOUBLE>( "HEARTBEAT_INTERVAL" ), Bind<VARCHAR>( "TLS_VERSION", 100 ) );
}

BindsArray<InputCType> rwlock_instancesInputBindsArray() {
   return makeInputBindsArray( Bind<VARCHAR>( "NAME", 100 ),
                               Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
                               Bind<BIGINT_UNSIGNED>( "WRITE_LOCKED_BY_THREAD_ID" ),
                               Bind<INT_UNSIGNED>( "READ_LOCKED_BY_COUNT" ) );
}
BindsArray<OutputCType> rwlock_instancesOutputBindsArray() {
   return makeOutputBindsArray( Bind<VARCHAR>( "NAME", 100 ),
                                Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
                                Bind<BIGINT_UNSIGNED>( "WRITE_LOCKED_BY_THREAD_ID" ),
                                Bind<INT_UNSIGNED>( "READ_LOCKED_BY_COUNT" ) );
}

BindsArray<InputCType> session_account_connect_attrsInputBindsArray() {
   return makeInputBindsArray( Bind<INT>( "PROCESSLIST_ID" ), Bind<VARCHAR>( "ATTR_NAME", 100 ),
                               Bind<VARCHAR>( "ATTR_VALUE", 100 ),
                               Bind<INT>( "ORDINAL_POSITION" ) );
}
BindsArray<OutputCType> session_account_connect_attrsOutputBindsArray() {
   return makeOutputBindsArray( Bind<INT>( "PROCESSLIST_ID" ), Bind<VARCHAR>( "ATTR_NAME", 100 ),
                                Bind<VARCHAR>( "ATTR_VALUE", 100 ),
                                Bind<INT>( "ORDINAL_POSITION" ) );
}

BindsArray<InputCType> session_connect_attrsInputBindsArray() {
   return makeInputBindsArray( Bind<INT>( "PROCESSLIST_ID" ), Bind<VARCHAR>( "ATTR_NAME", 100 ),
                               Bind<VARCHAR>( "ATTR_VALUE", 100 ),
                               Bind<INT>( "ORDINAL_POSITION" ) );
}
BindsArray<OutputCType> session_connect_attrsOutputBindsArray() {
   return makeOutputBindsArray( Bind<INT>( "PROCESSLIST_ID" ), Bind<VARCHAR>( "ATTR_NAME", 100 ),
                                Bind<VARCHAR>( "ATTR_VALUE", 100 ),
                                Bind<INT>( "ORDINAL_POSITION" ) );
}

BindsArray<InputCType> session_statusInputBindsArray() {
   return makeInputBindsArray( Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                               Bind<VARCHAR>( "VARIABLE_VALUE", 100 ) );
}
BindsArray<OutputCType> session_statusOutputBindsArray() {
   return makeOutputBindsArray( Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                                Bind<VARCHAR>( "VARIABLE_VALUE", 100 ) );
}

BindsArray<InputCType> setup_actorsInputBindsArray() {
   return makeInputBindsArray( Bind<CHAR>( "HOST", 100 ), Bind<CHAR>( "USER", 100 ),
                               Bind<CHAR>( "ROLE", 100 ), Bind<ENUM>( "ENABLED", 100 ),
                               Bind<ENUM>( "HISTORY", 100 ) );
}
BindsArray<OutputCType> setup_actorsOutputBindsArray() {
   return makeOutputBindsArray( Bind<CHAR>( "HOST", 100 ), Bind<CHAR>( "USER", 100 ),
                                Bind<CHAR>( "ROLE", 100 ), Bind<ENUM>( "ENABLED", 100 ),
                                Bind<ENUM>( "HISTORY", 100 ) );
}

BindsArray<InputCType> setup_consumersInputBindsArray() {
   return makeInputBindsArray( Bind<VARCHAR>( "NAME", 100 ), Bind<ENUM>( "ENABLED", 100 ) );
}
BindsArray<OutputCType> setup_consumersOutputBindsArray() {
   return makeOutputBindsArray( Bind<VARCHAR>( "NAME", 100 ), Bind<ENUM>( "ENABLED", 100 ) );
}

BindsArray<InputCType> setup_instrumentsInputBindsArray() {
   return makeInputBindsArray( Bind<VARCHAR>( "NAME", 100 ), Bind<ENUM>( "ENABLED", 100 ),
                               Bind<ENUM>( "TIMED", 100 ) );
}
BindsArray<OutputCType> setup_instrumentsOutputBindsArray() {
   return makeOutputBindsArray( Bind<VARCHAR>( "NAME", 100 ), Bind<ENUM>( "ENABLED", 100 ),
                                Bind<ENUM>( "TIMED", 100 ) );
}

BindsArray<InputCType> setup_objectsInputBindsArray() {
   return makeInputBindsArray( Bind<ENUM>( "OBJECT_TYPE", 100 ),
                               Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
                               Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<ENUM>( "ENABLED", 100 ),
                               Bind<ENUM>( "TIMED", 100 ) );
}
BindsArray<OutputCType> setup_objectsOutputBindsArray() {
   return makeOutputBindsArray( Bind<ENUM>( "OBJECT_TYPE", 100 ),
                                Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
                                Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<ENUM>( "ENABLED", 100 ),
                                Bind<ENUM>( "TIMED", 100 ) );
}

BindsArray<InputCType> setup_timersInputBindsArray() {
   return makeInputBindsArray( Bind<VARCHAR>( "NAME", 100 ), Bind<ENUM>( "TIMER_NAME", 100 ) );
}
BindsArray<OutputCType> setup_timersOutputBindsArray() {
   return makeOutputBindsArray( Bind<VARCHAR>( "NAME", 100 ), Bind<ENUM>( "TIMER_NAME", 100 ) );
}

BindsArray<InputCType> socket_instancesInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<INT>( "SOCKET_ID" ), Bind<VARCHAR>( "IP", 100 ),
       Bind<INT>( "PORT" ), Bind<ENUM>( "STATE", 100 ) );
}
BindsArray<OutputCType> socket_instancesOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<INT>( "SOCKET_ID" ), Bind<VARCHAR>( "IP", 100 ),
       Bind<INT>( "PORT" ), Bind<ENUM>( "STATE", 100 ) );
}

BindsArray<InputCType> socket_summary_by_event_nameInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_READ" ), Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_MISC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_MISC" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_MISC" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_MISC" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_MISC" ) );
}
BindsArray<OutputCType> socket_summary_by_event_nameOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_READ" ), Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_MISC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_MISC" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_MISC" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_MISC" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_MISC" ) );
}

BindsArray<InputCType> socket_summary_by_instanceInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_READ" ), Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_MISC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_MISC" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_MISC" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_MISC" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_MISC" ) );
}
BindsArray<OutputCType> socket_summary_by_instanceOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "EVENT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_READ" ), Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_NUMBER_OF_BYTES_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_MISC" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_MISC" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_MISC" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_MISC" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_MISC" ) );
}

BindsArray<InputCType> status_by_accountInputBindsArray() {
   return makeInputBindsArray( Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ),
                               Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                               Bind<VARCHAR>( "VARIABLE_VALUE", 100 ) );
}
BindsArray<OutputCType> status_by_accountOutputBindsArray() {
   return makeOutputBindsArray( Bind<CHAR>( "USER", 100 ), Bind<CHAR>( "HOST", 100 ),
                                Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                                Bind<VARCHAR>( "VARIABLE_VALUE", 100 ) );
}

BindsArray<InputCType> status_by_hostInputBindsArray() {
   return makeInputBindsArray( Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                               Bind<VARCHAR>( "VARIABLE_VALUE", 100 ) );
}
BindsArray<OutputCType> status_by_hostOutputBindsArray() {
   return makeOutputBindsArray( Bind<CHAR>( "HOST", 100 ), Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                                Bind<VARCHAR>( "VARIABLE_VALUE", 100 ) );
}

BindsArray<InputCType> status_by_threadInputBindsArray() {
   return makeInputBindsArray( Bind<BIGINT_UNSIGNED>( "THREAD_ID" ),
                               Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                               Bind<VARCHAR>( "VARIABLE_VALUE", 100 ) );
}
BindsArray<OutputCType> status_by_threadOutputBindsArray() {
   return makeOutputBindsArray( Bind<BIGINT_UNSIGNED>( "THREAD_ID" ),
                                Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                                Bind<VARCHAR>( "VARIABLE_VALUE", 100 ) );
}

BindsArray<InputCType> status_by_userInputBindsArray() {
   return makeInputBindsArray( Bind<CHAR>( "USER", 100 ), Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                               Bind<VARCHAR>( "VARIABLE_VALUE", 100 ) );
}
BindsArray<OutputCType> status_by_userOutputBindsArray() {
   return makeOutputBindsArray( Bind<CHAR>( "USER", 100 ), Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                                Bind<VARCHAR>( "VARIABLE_VALUE", 100 ) );
}

BindsArray<InputCType> table_handlesInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "OWNER_THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "OWNER_EVENT_ID" ),
       Bind<VARCHAR>( "INTERNAL_LOCK", 100 ), Bind<VARCHAR>( "EXTERNAL_LOCK", 100 ) );
}
BindsArray<OutputCType> table_handlesOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "OBJECT_INSTANCE_BEGIN" ),
       Bind<BIGINT_UNSIGNED>( "OWNER_THREAD_ID" ), Bind<BIGINT_UNSIGNED>( "OWNER_EVENT_ID" ),
       Bind<VARCHAR>( "INTERNAL_LOCK", 100 ), Bind<VARCHAR>( "EXTERNAL_LOCK", 100 ) );
}

BindsArray<InputCType> table_io_waits_summary_by_index_usageInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<VARCHAR>( "INDEX_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_FETCH" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_FETCH" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_FETCH" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_FETCH" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_FETCH" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_INSERT" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_INSERT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_INSERT" ), Bind<BIGINT_UNSIGNED>( "COUNT_UPDATE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_UPDATE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_UPDATE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_UPDATE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_UPDATE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_DELETE" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_DELETE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_DELETE" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_DELETE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_DELETE" ) );
}
BindsArray<OutputCType> table_io_waits_summary_by_index_usageOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<VARCHAR>( "INDEX_NAME", 100 ),
       Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "COUNT_READ" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "COUNT_FETCH" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_FETCH" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_FETCH" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_FETCH" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_FETCH" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_INSERT" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_INSERT" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_INSERT" ), Bind<BIGINT_UNSIGNED>( "COUNT_UPDATE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_UPDATE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_UPDATE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_UPDATE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_UPDATE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_DELETE" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_DELETE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_DELETE" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_DELETE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_DELETE" ) );
}

BindsArray<InputCType> table_io_waits_summary_by_tableInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_FETCH" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_FETCH" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_FETCH" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_FETCH" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_FETCH" ), Bind<BIGINT_UNSIGNED>( "COUNT_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_INSERT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_INSERT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_UPDATE" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_UPDATE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_UPDATE" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_UPDATE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_UPDATE" ), Bind<BIGINT_UNSIGNED>( "COUNT_DELETE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_DELETE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_DELETE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_DELETE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_DELETE" ) );
}
BindsArray<OutputCType> table_io_waits_summary_by_tableOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_FETCH" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_FETCH" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_FETCH" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_FETCH" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_FETCH" ), Bind<BIGINT_UNSIGNED>( "COUNT_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_INSERT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_INSERT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_UPDATE" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_UPDATE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_UPDATE" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_UPDATE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_UPDATE" ), Bind<BIGINT_UNSIGNED>( "COUNT_DELETE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_DELETE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_DELETE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_DELETE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_DELETE" ) );
}

BindsArray<InputCType> table_lock_waits_summary_by_tableInputBindsArray() {
   return makeInputBindsArray(
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ_WITH_SHARED_LOCKS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_WITH_SHARED_LOCKS" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_WITH_SHARED_LOCKS" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_WITH_SHARED_LOCKS" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_WITH_SHARED_LOCKS" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ_HIGH_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_HIGH_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_HIGH_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_HIGH_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_HIGH_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ_NO_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_NO_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_NO_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_NO_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_NO_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE_ALLOW_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE_ALLOW_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE_ALLOW_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE_ALLOW_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE_ALLOW_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE_CONCURRENT_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE_CONCURRENT_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE_CONCURRENT_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE_CONCURRENT_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE_CONCURRENT_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE_DELAYED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE_DELAYED" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE_DELAYED" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE_DELAYED" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE_DELAYED" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE_LOW_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE_LOW_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE_LOW_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE_LOW_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE_LOW_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE_EXTERNAL" ) );
}
BindsArray<OutputCType> table_lock_waits_summary_by_tableOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<VARCHAR>( "OBJECT_TYPE", 100 ), Bind<VARCHAR>( "OBJECT_SCHEMA", 100 ),
       Bind<VARCHAR>( "OBJECT_NAME", 100 ), Bind<BIGINT_UNSIGNED>( "COUNT_STAR" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WAIT" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WAIT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ" ), Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ" ), Bind<BIGINT_UNSIGNED>( "COUNT_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE" ), Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ_WITH_SHARED_LOCKS" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_WITH_SHARED_LOCKS" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_WITH_SHARED_LOCKS" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_WITH_SHARED_LOCKS" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_WITH_SHARED_LOCKS" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ_HIGH_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_HIGH_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_HIGH_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_HIGH_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_HIGH_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ_NO_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_NO_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_NO_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_NO_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_NO_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_READ_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_READ_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_READ_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_READ_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_READ_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE_ALLOW_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE_ALLOW_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE_ALLOW_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE_ALLOW_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE_ALLOW_WRITE" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE_CONCURRENT_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE_CONCURRENT_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE_CONCURRENT_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE_CONCURRENT_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE_CONCURRENT_INSERT" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE_DELAYED" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE_DELAYED" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE_DELAYED" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE_DELAYED" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE_DELAYED" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE_LOW_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE_LOW_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE_LOW_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE_LOW_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE_LOW_PRIORITY" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE_NORMAL" ),
       Bind<BIGINT_UNSIGNED>( "COUNT_WRITE_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "SUM_TIMER_WRITE_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "MIN_TIMER_WRITE_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "AVG_TIMER_WRITE_EXTERNAL" ),
       Bind<BIGINT_UNSIGNED>( "MAX_TIMER_WRITE_EXTERNAL" ) );
}

BindsArray<InputCType> threadsInputBindsArray() {
   return makeInputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<VARCHAR>( "NAME", 100 ),
       Bind<VARCHAR>( "TYPE", 100 ), Bind<BIGINT_UNSIGNED>( "PROCESSLIST_ID" ),
       Bind<VARCHAR>( "PROCESSLIST_USER", 100 ), Bind<VARCHAR>( "PROCESSLIST_HOST", 100 ),
       Bind<VARCHAR>( "PROCESSLIST_DB", 100 ), Bind<VARCHAR>( "PROCESSLIST_COMMAND", 100 ),
       Bind<BIGINT>( "PROCESSLIST_TIME" ), Bind<VARCHAR>( "PROCESSLIST_STATE", 100 ),
       Bind<LONGTEXT>( "PROCESSLIST_INFO", 100 ), Bind<BIGINT_UNSIGNED>( "PARENT_THREAD_ID" ),
       Bind<VARCHAR>( "ROLE", 100 ), Bind<ENUM>( "INSTRUMENTED", 100 ),
       Bind<ENUM>( "HISTORY", 100 ), Bind<VARCHAR>( "CONNECTION_TYPE", 100 ),
       Bind<BIGINT_UNSIGNED>( "THREAD_OS_ID" ) );
}
BindsArray<OutputCType> threadsOutputBindsArray() {
   return makeOutputBindsArray(
       Bind<BIGINT_UNSIGNED>( "THREAD_ID" ), Bind<VARCHAR>( "NAME", 100 ),
       Bind<VARCHAR>( "TYPE", 100 ), Bind<BIGINT_UNSIGNED>( "PROCESSLIST_ID" ),
       Bind<VARCHAR>( "PROCESSLIST_USER", 100 ), Bind<VARCHAR>( "PROCESSLIST_HOST", 100 ),
       Bind<VARCHAR>( "PROCESSLIST_DB", 100 ), Bind<VARCHAR>( "PROCESSLIST_COMMAND", 100 ),
       Bind<BIGINT>( "PROCESSLIST_TIME" ), Bind<VARCHAR>( "PROCESSLIST_STATE", 100 ),
       Bind<LONGTEXT>( "PROCESSLIST_INFO", 100 ), Bind<BIGINT_UNSIGNED>( "PARENT_THREAD_ID" ),
       Bind<VARCHAR>( "ROLE", 100 ), Bind<ENUM>( "INSTRUMENTED", 100 ),
       Bind<ENUM>( "HISTORY", 100 ), Bind<VARCHAR>( "CONNECTION_TYPE", 100 ),
       Bind<BIGINT_UNSIGNED>( "THREAD_OS_ID" ) );
}

BindsArray<InputCType> user_variables_by_threadInputBindsArray() {
   return makeInputBindsArray( Bind<BIGINT_UNSIGNED>( "THREAD_ID" ),
                               Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                               Bind<LONGBLOB>( "VARIABLE_VALUE", 100 ) );
}
BindsArray<OutputCType> user_variables_by_threadOutputBindsArray() {
   return makeOutputBindsArray( Bind<BIGINT_UNSIGNED>( "THREAD_ID" ),
                                Bind<VARCHAR>( "VARIABLE_NAME", 100 ),
                                Bind<LONGBLOB>( "VARIABLE_VALUE", 100 ) );
}

BindsArray<InputCType> usersInputBindsArray() {
   return makeInputBindsArray( Bind<CHAR>( "USER", 100 ), Bind<BIGINT>( "CURRENT_CONNECTIONS" ),
                               Bind<BIGINT>( "TOTAL_CONNECTIONS" ) );
}
BindsArray<OutputCType> usersOutputBindsArray() {
   return makeOutputBindsArray( Bind<CHAR>( "USER", 100 ), Bind<BIGINT>( "CURRENT_CONNECTIONS" ),
                                Bind<BIGINT>( "TOTAL_CONNECTIONS" ) );
}
